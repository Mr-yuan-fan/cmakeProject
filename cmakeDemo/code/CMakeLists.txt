CMAKE_MINIMUM_REQUIRED(VERSION 3.8)

#code ―>  各层级路径
SET(CODE_INCLUDE_PATH "${CODE_BUILD_PATH}/include")
SET(CODE_SOURCE_PATH "${CODE_BUILD_PATH}/source")
SET(CODE_TEST_PATH "${CODE_BUILD_PATH}/test")

#code ―> source --> 各dll项目路径
#SET(COMMON_SOURCE_PATH "${CODE_SOURCE_PATH}/dll/common")
#SET(ALGORITHM_SOURCE_PATH "${CODE_SOURCE_PATH}/dll/algorithm")
#SET(THREAD_SOURCE_PATH "${CODE_SOURCE_PATH}/dll/thread")

#code ―> include --> 各dll项目路径
SET(ALGORITHM_PUBLIC_PATH "${CODE_INCLUDE_PATH}/dll/algorithm")
SET(THREAD_PUBLIC_PATH "${CODE_INCLUDE_PATH}/dll/thread")
SET(COMMON_PUBLIC_PATH "${CODE_INCLUDE_PATH}/dll/common")

SET(COMMON_PUBLIC_PATH "${CODE_INCLUDE_PATH}/dll/common")

#code ―> source --> 各lib项目路径
#SET(LIB_DESIGNMODEL_SOURCE_PATH "${CODE_SOURCE_PATH}/lib/designMode")

#code ―> include --> 各lib项目路径
SET(LIB_DESIGNMODEL_PUBLIC_PATH "${CODE_INCLUDE_PATH}/lib/designMode")

INCLUDE_DIRECTORIES(${THREAD_PUBLIC_PATH})
INCLUDE_DIRECTORIES(${ALGORITHM_PUBLIC_PATH})
INCLUDE_DIRECTORIES(${COMMON_PUBLIC_PATH})
INCLUDE_DIRECTORIES(${LIB_DESIGNMODEL_PUBLIC_PATH})
INCLUDE_DIRECTORIES(${CODE_SOURCE_PATH})

INCLUDE_DIRECTORIES(${FRAMEWORK_SOURCE_UTITLY_PATH})
INCLUDE_DIRECTORIES(${FRAMEWORK_PUBLIC_COMPONENT_PATH})


OPTION(BUILD_TEST_OPEN_FLAG "test" ON)

IF(BUILD_TEST_OPEN_FLAG)
 ADD_SUBDIRECTORY(test)
ENDIF(BUILD_TEST_OPEN_FLAG)

ADD_SUBDIRECTORY(source)



CMAKE_MINIMUM_REQUIRED(VERSION 3.8)

PROJECT(wellinos8.0)

list (APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules")
INCLUDE(AddCodeFile)
MESSAGE("system version: ${CMAKE_SYSTEM_VERSION}")

SET(CODE_BUILD_PATH "${PROJECT_SOURCE_DIR}/code")
SET(THIRD_PARTY_LIBRARY_PATH "${PROJECT_SOURCE_DIR}/thirdParty")
SET(FRAMEWORK_PATH "${PROJECT_SOURCE_DIR}/framework")

#framework/source/..
SET(FRAMEWORK_SOURCE_PATH "${FRAMEWORK_PATH}/source")
SET(FRAMEWORK_SOURCE_COMPONENT_PATH "${FRAMEWORK_SOURCE_PATH}/common/component")
SET(FRAMEWORK_SOURCE_SERVICE_PATH "${FRAMEWORK_SOURCE_PATH}/common/service")
SET(FRAMEWORK_SOURCE_UTITLY_PATH "${FRAMEWORK_SOURCE_PATH}/common/utitly")

#framework/include/..
SET(FRAMEWORK_INCLUDE_PATH "${FRAMEWORK_PATH}/include")
SET(FRAMEWORK_PUBLIC_COMPONENT_PATH "${FRAMEWORK_INCLUDE_PATH}/common/component")
SET(FRAMEWORK_PUBLIC_SERVICE_PATH "${FRAMEWORK_INCLUDE_PATH}/common/service")

#framework/test
SET(FRAMEWORK_TEST_PATH "${FRAMEWORK_PATH}/test")

#output path
SET(EXECUTABLE_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin/win64/${CMAKE_BUILD_TYPE}")
SET(LIBRARY_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin/win64/${CMAKE_BUILD_TYPE}")
SET(TARGET_BIN_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin/win64/${CMAKE_BUILD_TYPE}")
SET(TARGET_LIB_OUTPUT_PATH "${PROJECT_SOURCE_DIR}/bin/win64/${CMAKE_BUILD_TYPE}")

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

OPTION(BUILD_SDK_OPEN_FLAG "BUILD_SDK_OPEN_FLAG" OFF)
OPTION(BUILD_FRAMEWORK_OPEN_FLAG "BUILD_FRAMEWORK_OPEN_FLAG" ON)

IF(BUILD_FRAMEWORK_OPEN_FLAG)
 ADD_SUBDIRECTORY(framework)
ENDIF(BUILD_FRAMEWORK_OPEN_FLAG)

IF(BUILD_SDK_OPEN_FLAG)
 ADD_SUBDIRECTORY(sdk)
ENDIF(BUILD_SDK_OPEN_FLAG)

ADD_SUBDIRECTORY(code)